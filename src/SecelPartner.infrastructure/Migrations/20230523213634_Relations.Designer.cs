// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SecelPartner.Infrastructure.DefaultContext;

#nullable disable

namespace SecelPartner.Infrastructure.Migrations
{
    [DbContext(typeof(SecelPartnerDataContext))]
    [Migration("20230523213634_Relations")]
    partial class Relations
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.16")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("SecelPartner.Core.Entities.Avantage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartenariatId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartenariatId");

                    b.ToTable("Avantage");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Condition", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartenariatId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartenariatId");

                    b.ToTable("Condition");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.ConditionRenouv", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PartenariatId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("PartenariatId");

                    b.ToTable("ConditionRenouvelement");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Contact", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PartenaireId")
                        .HasColumnType("int");

                    b.Property<string>("Poste")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Prenom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Tel")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("PartenaireId");

                    b.ToTable("Contact");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.ContratPartenariat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<DateTime>("DateExpiration")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateSign")
                        .HasColumnType("datetime2");

                    b.Property<int>("Montant")
                        .HasColumnType("int");

                    b.Property<int>("PartenaireId")
                        .HasColumnType("int");

                    b.Property<string>("PartenariatId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Titre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("PartenaireId");

                    b.HasIndex("PartenariatId");

                    b.ToTable("ContratPartenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.NiveauPartenariat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Designation")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("NiveauPartenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Partenaire", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Adresse")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumTel")
                        .HasColumnType("int");

                    b.Property<string>("SecteurAc")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Siteweb")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Statut")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Partenaire");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Partenariat", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NiveauPartenariatId")
                        .HasColumnType("int");

                    b.Property<int>("TypePartenariatId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("NiveauPartenariatId");

                    b.HasIndex("TypePartenariatId");

                    b.ToTable("Partenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.TypePartenariat", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Nom")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("TypePartenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Avantage", b =>
                {
                    b.HasOne("SecelPartner.Core.Entities.Partenariat", "Partenariat")
                        .WithMany("Avantages")
                        .HasForeignKey("PartenariatId");

                    b.Navigation("Partenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Condition", b =>
                {
                    b.HasOne("SecelPartner.Core.Entities.Partenariat", "Partenariat")
                        .WithMany("Conditions")
                        .HasForeignKey("PartenariatId");

                    b.Navigation("Partenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.ConditionRenouv", b =>
                {
                    b.HasOne("SecelPartner.Core.Entities.Partenariat", "Partenariat")
                        .WithMany("ConditionRenouvs")
                        .HasForeignKey("PartenariatId");

                    b.Navigation("Partenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Contact", b =>
                {
                    b.HasOne("SecelPartner.Core.Entities.Partenaire", "Partenaire")
                        .WithMany("Contacts")
                        .HasForeignKey("PartenaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Partenaire");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.ContratPartenariat", b =>
                {
                    b.HasOne("SecelPartner.Core.Entities.Partenaire", "Partenaire")
                        .WithMany("ContratPartenariats")
                        .HasForeignKey("PartenaireId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecelPartner.Core.Entities.Partenariat", "Partenariat")
                        .WithMany("ContratPartenariats")
                        .HasForeignKey("PartenariatId");

                    b.Navigation("Partenaire");

                    b.Navigation("Partenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Partenariat", b =>
                {
                    b.HasOne("SecelPartner.Core.Entities.NiveauPartenariat", "NiveauPartenariat")
                        .WithMany()
                        .HasForeignKey("NiveauPartenariatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("SecelPartner.Core.Entities.TypePartenariat", "TypePartenariat")
                        .WithMany()
                        .HasForeignKey("TypePartenariatId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("NiveauPartenariat");

                    b.Navigation("TypePartenariat");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Partenaire", b =>
                {
                    b.Navigation("Contacts");

                    b.Navigation("ContratPartenariats");
                });

            modelBuilder.Entity("SecelPartner.Core.Entities.Partenariat", b =>
                {
                    b.Navigation("Avantages");

                    b.Navigation("ConditionRenouvs");

                    b.Navigation("Conditions");

                    b.Navigation("ContratPartenariats");
                });
#pragma warning restore 612, 618
        }
    }
}
